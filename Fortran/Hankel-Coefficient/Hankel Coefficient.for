********************************************************
*   1,This is the program to calculate the filter      *
*     coefficient of The Fast Hankel Transform         *
*   2,The meaning of the parameter in the program      *
*     is as follow:                                    *
*   a,I...the step of Bessel Function                  *
*   b,HAN...the coefficient of the filter              *
*   c,DELT=ln(10)/10.                                  *
*   d,A/DELT=2./PI                                     *
********************************************************
      PROGRAM HANKEL TRANSFORM
	INTEGER I
	EXTERNAL HANKEL
      WRITE(*,10) 
10    FORMAT(1X,'INPUT I--THE STEP OF BESSEL FUNCTION')
      READ(*,*) I
	OPEN(5,FILE='hankel_1.dat')
	!WRITE(5,400) I
	!WRITE(5,600)
	DO J=1,119
	   L=-59+J
	   HAN=HANKEL(L,I)
	   WRITE(5,300) HAN
	END DO
300   FORMAT(1X,1E25.7)
400   FORMAT(1X,'THE COEFFICIENT OF F.H.T'/3X,'I=',I1,5X,'DELT=0.23
     *       A/DELT=2./PI')
600   FORMAT(3X,'No.',15X,'COEFFICIENT')
      CLOSE(5)
	END PROGRAM HANKEL TRANSFORM
C
C
      FUNCTION HANKEL(I,L)
	DOUBLE PRECISION PI,DELT,SN,SMAX,PA,SA,CA,HKC,B,SGAM,
     *  S,ES,CHS,THS,AIM,REX,T1,T2,T3,A,HN(200),
     *  REZ,IMZ,REC,IMC,REC1,IMC1,REG,IMG,REC2,IMC2
	  N1=12
	  N2=15
	  N3=70
	  N4=40
	  M1=83
	  M2=84
	  M3=101
	  M4=102
	  SGAM=1.2D0
	  B=0.2D0
	  ND=10
	  PI=3.1415926535897936D0
	  DELT=DLOG(10.D0)/DBLE(FLOAT(ND))
        !DELT=log(10d0)/10d0
	  AM=0.5D0
20      A=DELT/AM/PI
        PA=PI/A
	  SA=DSINH(PA)
	  CA=DCOSH(PA)
	RY=FLOAT(L)
	IF(I.LE.M1-76) GO TO 400
	IF(I.GE.M4-76) GO TO 420
	GO TO 410
400   AN=FLOAT(I)
      HKC=0.D0
	T1=-DEXP(DBLE(AN)*DELT*2.D0)/4.D0
	T2=1.D0
	R=RY
50    IF(R.LE.0.0)GO TO 40
      T2=T2*DBLE(R)
	R=R-1.D0
	GOTO 50
40    T3=DEXP(DELT*(DBLE(AN)*DBLE(RY+1.0)))/2.0**RY/T2*DELT
      DO 30 J=1,N1
	CHS=DCOS(DELT/A*DBLE(2.0*FLOAT(J)+RY-1.0))
	THS=SA/(CA+CHS)
	HKC=HKC+THS*T3
	S=DABS(T3)
	ES=DABS(HKC)
	IF(S.LE.1.D-29*ES) GO TO 31
30    T3=T3/DBLE(FLOAT(J))*T1/DBLE(FLOAT(J)+RY)
31    AIM=0.D0
      DO 500 K=1,N2
	REZ=0.5D0/DELT
	IMZ=-DBLE(FLOAT(K)-0.5)*A/DELT
	REC=DBLE(RY+1.0)/2.D0+IMZ*PI
	IMC=-REZ*PI
	CALL GAMLOG(REC,IMC,RY,REC1,IMC1)
	S=2.D0*PI*(DBLE(AN)*DELT-DLOG(2.D0))
	REC1=REC1-S*IMZ
	IMC1=IMC1+S*REZ
	IF(REC1.LE.-9.D1)GOTO 61
	S=DEXP(REC1)
	REX=S*DSIN(IMC1)
	ES=DABS(AIM)
9     FORMAT(1X,5D19.6)
      IF(S.LE.1.D-29*ES)GOTO 61
	AIM=AIM+REX
500   CONTINUE
61    HKC=HKC-AIM*2.D0*A
      HANKEL=HKC
10    RETURN
410   AN=FLOAT(I)
      HKC=0.D0
	AIM=0.D0
	DO 810 K=1,N3
	REZ=0.5/DELT
	IMZ=A/DELT*DBLE(FLOAT(K)-0.5)
	REC=DBLE(RY+1.0)/2.D0+PI*IMZ
	IMC=-PI*REZ
	CALL GAMLOG(REC,IMC,RY,REC1,IMC1)
	S=2.D0*PI*(DBLE(AN)*DELT-DLOG(2.D0))
	REC1=REC1-IMZ*S
	IMC1=IMC1+REZ*S
	S=-2.D0*PI/B
	REC=S*(SGAM-IMZ)
	IMC=S*REZ
	IF(REC.GE.35.D0) GOTO 820
	S=DEXP(REC)
	REC=1.D0+S*DCOS(IMC)
	IMC=S*DSIN(IMC)
	REC1=REC1-DLOG(REC*REC+IMC*IMC)*0.5
	IMC1=IMC1-DATAN2(IMC,REC)
	GOTO 830
820   REC1=REC1-REC
      IMC1=IMC1-IMC
830   IF(REC1.GE.-90.D0)GOTO 835
      REX=0.D0
	S=0.D0
	GOTO 837
835   S=DEXP(REC1)
      IMC1=IMC1-DBLE(FLOAT(IDINT(IMC1/2.D0/PI)))*2.D0*PI
	REX=S*DSIN(IMC1)
837   ES=DABS(AIM)
      IF(S.LE.1.D-29*ES)GOTO 811
810   AIM=AIM+REX
811   HKC=HKC+AIM*A*2.0
      AIM=0.D0
	DO 840 K=1,N4
	S=2.D0*PI/A*DELT
	ES=S*SGAM
	S=S*DBLE(FLOAT(K)-0.5)*B
	REC2=DCOSH(S)*DCOS(ES)
	IMC2=DSINH(S)*DSIN(ES)
	CALL COMPAS(SA,0.D0,CA+REC2,IMC2,2,REC2,IMC2)
17    REZ=B*DBLE(FLOAT(K)-0.5)
      IMZ=SGAM
	REC=DBLE(RY+1.0)/2.D0+PI*IMZ
	IMC=-PI*REZ
	CALL GAMLOG(REC,IMC,RY,REC1,IMC1)
	S=2.D0*PI*(DBLE(AN)*DELT-DLOG(2.D0))
	REC1=REC1-IMZ*S
	IMC1=IMC1+REZ*S
	IF(REC1.LE.-6.D1)GOTO 841
	S=DEXP(REC1)
	REC1=S*DCOS(IMC1)
	IMC1=S*DSIN(IMC1)
	S=REC1
	ES=IMC1
	CALL COMPAS(S,ES,REC2,IMC2,1,REC1,IMC1)
	IF(DABS(REC1).LE.1.D-29*DABS(AIM))GOTO 841
840   AIM=AIM+REC1
841   HKC=HKC+AIM*2.0*B*DELT
      HANKEL=HKC
800   RETURN
420   AN=FLOAT(I)
      HKC=0.D0
	AIM=0.D0
	REC1=0.D0
	IMC1=0.D0
	DO 600 K=1,N3
	REZ=0.5/DELT
	IMZ=DBLE(FLOAT(K)-0.5)*A/DELT
	REC=DBLE(RY+1.0)/2.D0+PI*IMZ
	IMC=-PI*REZ
	CALL GAMLOG(REC,IMC,RY,REC1,IMC1)
	S=2.D0*PI*(DBLE(AN)*DELT-DLOG(2.D0))
	REC1=REC1-IMZ*S
	IMC1=IMC1+REZ*S
	IF(REC1.LE.-90.D0)GOTO 601
	S=DEXP(REC1)
	IF(S.LE.1.D-29*DABS(AIM)) GO TO 601
600   AIM=AIM+S*DSIN(IMC1)
601   HKC=HKC+AIM*2.0*A
      HANKEL=HKC
700   RETURN
      END FUNCTION HANKEL
C
C     
      SUBROUTINE GAMLOG(REZ,IMZ,RY,REG,IMG)
	DOUBLE PRECISION XG,PI,REZ,IMZ,REZ1,IMZ1,REZ2,IMZ2,REZ3,IMZ3,
     *REG,IMG,REG1,IMG1,REZ4,IMZ4,REZ5,IMZ5,REZ6,IMZ6
	DIMENSION B(5)
	DATA B/12.0,-360.,1260.,-1680.,1188./
	PI=3.1415926535897936D0
	REG=1.D0
	IMG=0.D0
	REZ2=REZ
	IMZ2=IMZ
	REZ1=DBLE(RY+1.0)-REZ
	IMZ1=-IMZ
3     IF(IDINT(REZ1)-IDINT(REZ2).EQ.0) GOTO 1
      IF(IDINT(REZ1)-IDINT(REZ2).GT.0) GOTO 4
	REG1=REG
	IMG1=IMG
	CALL COMPAS(REG1,IMG1,REZ1,IMZ1,1,REG,IMG)
	REZ1=REZ1+1.D0
	GOTO 3
4     REG1=REG
      IMG1=IMG
	CALL COMPAS(REG1,IMG1,REZ2,IMZ2,2,REG,IMG)
	REZ2=REZ2+1.D0
	GOTO 3
1     IF(REZ1.EQ.0.D0.AND.IMZ1.EQ.0.D0) GOTO 23
      IF(DABS(REZ1).GE.DABS(IMZ1))GOTO 16
	XG=REZ1/IMZ1
	XG=DABS(IMZ1)*SQRT(1.D0+XG*XG)
	GOTO 17
16    XG=IMZ1/REZ1
      XG=DABS(REZ1)*SQRT(1.D0+XG*XG)
	GOTO 17
23    XG=0.D0
17    IF(XG.GE.4.D1) GOTO 2
      REG1=REG
	IMG1=IMG
	CALL COMPAS(REG1,IMG1,REZ1,IMZ1,1,REG,IMG)
	REG1=REG
	IMG1=IMG
	CALL COMPAS(REG1,IMG1,REZ2,IMZ2,2,REG,IMG)
	REZ1=REZ1+1.D0
	REZ2=REZ2+1.D0
	GOTO 1
2     CALL COMPAS(REZ1,IMZ1,REZ1,IMZ1,3,REG1,IMG1)
      REG=REG1
	IMG=IMG1
	CALL COMPAS(REZ1,IMZ1,REZ1,IMZ1,3,REG1,IMG1)
      CALL COMPAS(REZ1-0.5D0,IMZ1,REG1,IMG1,1,REZ3,IMZ3)
	REG=REG-REZ3+REZ1
	IMG=IMG-IMZ3+IMZ1
	CALL COMPAS(REZ2,IMZ2,REZ2,IMZ2,3,REG1,IMG1)
	CALL COMPAS(REZ2-0.5D0,IMZ2,REG1,IMG1,1,REZ3,IMZ3) 
      REG=REG+REZ3-REZ2
	IMG=IMG+IMZ3-IMZ2
	CALL COMPAS(REZ1,IMZ1,REZ2,IMZ2,1,REZ4,IMZ4)
	CALL COMPAS(REZ1-REZ2,IMZ1-IMZ2,REZ4,IMZ4,2,REZ6,IMZ6)
	CALL COMPAS(REZ2,IMZ2,REZ1,IMZ1,2,REZ3,IMZ3)
	CALL COMPAS(REZ3,IMZ3,REZ3,IMZ3,1,REZ4,IMZ4)
	REZ3=REZ3+REZ4
	IMZ3=IMZ3+IMZ4
	CALL COMPAS(REZ2,IMZ2,REZ2,IMZ2,1,REG1,IMG1)
	CALL COMPAS(1.D0,0.D0,REG1,IMG1,2,REZ5,IMZ5)
	REG1=1.D0
	IMG1=0.D0
	DO 10 I=1,5
	CALL COMPAS(REZ6,IMZ6,REG1,IMG1,1,REZ1,IMZ1)
	REG=REG+REZ1/DBLE(B(I))
	IMG=IMG+IMZ1/DBLE(B(I))
	REG1=REG1+REZ3
	IMG1=IMG1+IMZ3
	CALL COMPAS(REZ4,IMZ4,REZ3,IMZ3,1,REZ1,IMZ1)
	REZ3=REZ1
	IMZ3=IMZ1
      CALL COMPAS(REZ6,IMZ6,REZ5,IMZ5,1,REZ1,IMZ1)
	REZ6=REZ1
	IMZ6=IMZ1
10    CONTINUE
12    RETURN
      END SUBROUTINE GAMLOG
C
C
      DOUBLE PRECISION FUNCTION DSINH(X)
	DOUBLE PRECISION X,X1,X2
	IF(DABS(X).LE.1.D0)GOTO 65
	X1=DEXP(X)
	DSINH=(X1-1.D0/X1)/2.D0
	GOTO 63
65    DSINH=0.D0
      X1=X
	I=1
	X2=X*X
64    DSINH=DSINH+X1
      IF(DABS(X1).LE.DABS(DSINH)*1.D-16) GOTO 63
	I=I+2
	X1=X1*X2/DBLE(FLOAT((I-1)*I))
	GOTO 64
63    RETURN
      END
C
C
      DOUBLE PRECISION FUNCTION DCOSH(X)
      DOUBLE PRECISION X
	DCOSH=DEXP(X)
	DCOSH=(DCOSH+1.D0/DCOSH)/2.D0
	RETURN
	END
C
C
      SUBROUTINE COMPAS(A,A1,B,B1,K,C,C1)
      DOUBLE PRECISION A,A1,B,B1,C,C1,C2
	IF(K.EQ.2) GOTO 13
	IF(K.EQ.3) GOTO 130
	C=A*B-A1*B1
	C1=A*B1+A1*B
	GOTO 15
13    IF(DABS(B1).GE.DABS(B))GOTO 14
      C=B1/B
	C1=C*B1+B
	C2=(A+A1*C)/C1
	C1=(A1-A*C)/C1
	C=C2
	GOTO 15
14    C=B/B1
	C1=C*B+B1
	C2=(A1+A*C)/C1
	C1=(A1*C-A)/C1
	C=C2
	GOTO 15
130   IF(DABS(A).GE.1.D0.OR.DABS(A1).GE.1.D0) GOTO 131
      C1=DABS(A/4.D0)
	C2=DABS(A1/4.D0)
	C=C1+C2
	C=DLOG(C)+DLOG(C1/C*C1+C2/C*C2)
	C=0.5D0*C+DLOG(4.D0)
	GOTO 132
131   C1=DABS(A*4.D0)
	C2=DABS(A1*4.D0)
	C=C1+C2
	C=DLOG(C)+DLOG(C1/C*C1+C2/C*C2)
	C=C*0.5D0-DLOG(4.D0)
132   C1=DATAN2(A1,A)
15    IF(DABS(C).GE.1.D30.OR.DABS(C1).GE.1.D30) WRITE(1,17)C,C1,A,A1,B,B1
17    FORMAT(1X,'C',1PE14.6,'C1',1PE14.6,4(1PE14.6))    
      RETURN
	END SUBROUTINE